plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'io.github.groovymc.modsdotgroovy' version '1.1.2'
}

version = "$mod_version"
group = 'ga.ozli.minecraftmods.japaneseemojicommands'
archivesBaseName = 'Japanese-Emoji-Commands-Forge-1.20.X'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        // Shared between all run configs
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'japaneseemojicommands'

            mods {
                japaneseemojicommands {
                    source sourceSets.main
                }
            }
        }

        client { args '--username', 'Dev##' }
        server { args '--nogui', 'true' }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer { args '--nogui', 'true' }

        data {
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'japaneseemojicommands', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('jar', Jar) {
    manifest.attributes([
            "Specification-Title"      : 'Japanese Emoji Commands',
            "Specification-Vendor"     : 'Paint_Ninja',
            "Specification-Version"    : "1", // We are version 1 of ourselves
            "Implementation-Title"     : 'Japanese Emoji Commands',
            "Implementation-Version"   : mod_version,
            "Implementation-Vendor"    : 'Paint_Ninja',
            "Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])

    includeEmptyDirs = false
    reproducibleFileOrder = true

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

modsDotGroovy {
    dslVersion = '1.2.1'
    platform 'forge'
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
